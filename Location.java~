/**
 * @author Gregory Cremins
 * @version 2-11-2012
 * Class to define a location and resolve the text outputs and events that occur at a location.
 */
import java.util.*;
public class Location{
 public String description;
 public int xPosn;
 public int yPosn;
 public boolean exit = false;
 public char roomType = 'v';
 public Item[] roomItems; 
 
   public Location(int XPOSN, int YPOSN, Item[] roomItems1)
  {
    roomItems = roomItems1;
    xPosn = XPOSN;
    yPosn = YPOSN;
   }
   public Location(int XPOSN, int YPOSN)
  {
    xPosn = XPOSN;
    yPosn = YPOSN;
    roomItems = new Item[]{}; 
   }
   public Item[] getItemList()
   {
     return roomItems;
   }
   public void ownItem(int position)
   {
    roomItems[position].isOwned = true;     
   }
   public void getItems()
   {
     for(Item i: roomItems)
     System.out.println(i.name);
     return;
   }
  public String getDesc(Location[] HallwayLocations, Location[] SpecialLocations)
  {
    //checks the hallway locations
    String temp;
    for(Location loc: HallwayLocations)
    {
      if(loc.xPosn == this.xPosn && loc.yPosn == this.yPosn)
      {temp = "A long corridor stretches before you. The lights blink on and off as if someone has damaged the power grid. The only thing that would make this setting more creepy would be ominous music. \nAll of the walls seem damaged. Paint is chipping off of them in random places. Occasionally, you see a dent in the wall.";
      roomType = 'h';
      return temp;
      }
    }
    //checks the special event locations
     if(this.xPosn == SpecialLocations[0].xPosn && this.yPosn == SpecialLocations[0].yPosn)
      {
        temp = "You are in a laboratory with glowing test tubes around you. A naked scientist now lies dead on the floor. You look again at the test tubes and see that they appear to look like you. \nYou notice that there are four doors leading out of the room……";
        roomType = 'n';
        return temp;
      }
      if(this.xPosn == SpecialLocations[1].xPosn && this.yPosn == SpecialLocations[1].yPosn)
      {
        temp = "You reach a fork in the road. There are pathways that lead to the north and south. \nAnother guard stands in front of you. He is in full body armor. He stares at you with pure disgust. Does he know that you're not a scientist? He holds what looks like a hallow tube with the letters NYAN on it.....";
        roomType = 'a';
        return temp;
      }
      if(this.xPosn == SpecialLocations[2].xPosn && this.yPosn == SpecialLocations[2].yPosn)
      {
        temp = "You notice some blood on the wall. You stare at it and it forms one word. \'YOU\'. Ominous... Below the message is a dead soldier. His chest has been ripped wide open and crimson blood slowly drips from the wound. \nThat would explain the messages. \nThere is a wall to your left and in front of you...";
        roomType = 'n';
        return temp;
      }
      if(this.xPosn == SpecialLocations[3].xPosn && this.yPosn == SpecialLocations[3].yPosn)
      {
        temp = " You find yourself in a small storage closet. \nThe only way out is the way you came in. \nThere is also a stack of bodies that is in the corner of the room. \nYou cannot remember if you made those because your memory is still fuzzy. There are lots of odds and ends in this room. Mostly janitorial objects.";
        roomType = 'w';
        return temp;
      }
      if(this.xPosn == SpecialLocations[4].xPosn && this.yPosn == SpecialLocations[4].yPosn)
      {
        temp = "You are still in a dimly lit halway. You hear the sound of footsteps getting closer down the corridor. To the north, you see a door. \'STORAGE\' is the label that is on it.";
        roomType = 'c';
        return temp;
      }
      if(this.xPosn == SpecialLocations[5].xPosn && this.yPosn == SpecialLocations[5].yPosn)
      {
        temp = "You notice some blood on the wall. You stare at it and it forms one word. \'LOSE\'. Ominous..... Haven't I seen another message like this already? You think silently to yourself.... Your memory is fuzzy, so you cannot remember exactly \nThere is a wall to your left and in front of you...";
        roomType = 'n';
        return temp;
      }
      if(this.xPosn == SpecialLocations[6].xPosn && this.yPosn == SpecialLocations[6].yPosn)
      {
        temp = "A steel door is in front of you. It says \'To Exit\'. You rejoice and you realize that there is an exit to this horrible laboratory. There is a keycard slot on the lock of the door. Do you have the key?";
        roomType = 'e';
        return temp;
      }
      //store is not finished yet
      if(this.xPosn == SpecialLocations[7].xPosn && this.yPosn == SpecialLocations[7].yPosn)
      {
        temp = "You arrive in an odd storage area. An old man appears and waves at you. \n Against your better judgement, you hope to make a friend, so you go over to him. He shakes your hand and says:\" Ahh yes, mmmm. Welcome to my shop. I am Admiral Akenbukendukener. \n I scoured all of these containment units and found the best items to sell to you. Of course at a modest fee in DerpDollars. So, here is what we have currently: \"";
        roomType = 's';
        return temp;
      }
      if(this.xPosn == SpecialLocations[8].xPosn && this.yPosn == SpecialLocations[8].yPosn)
      {
        temp = "You enter a small room. In it, there is a table with lots of paperwork and pens on it. They do not appear of any serious value, but you notice that some of them have interesting numbers on them that may be useful if you get out of here \n There is also a key on the table. Who honestly would leave a key lying on a desk? You peek out the window shades and see a guard to your south struggling with a vending machine. \n There are two doors to the room: to the south and east.";
        roomType = 'k';
        return temp;
      }
      if(this.xPosn == SpecialLocations[9].xPosn && this.yPosn == SpecialLocations[9].yPosn)
      {
        temp = "A guard is trying to use a vending machine with little success. He is punching and kicking it furiously as he yells that he wants his Trolol Bar. \n The vending maching does not oblige even with the consistant pummeling. \n He doesn't seem to take notice of you as you pass by.";
        roomType = 'b';
        return temp;
      }
      //otherwise, there is a wall
      else{
        temp = "You bonk your head against the wall. BONK! You think you hear a voice laughing at you.....";
        roomType = 'n';
        return temp;
      }
    }
  
  
  /**
   * Method to resolve any event on a given location
   */
  public void resolveEvent(Player player, Scanner sc)
  {
    switch (roomType){
      case 'h':
      {
        Random r = new Random();
        int money = r.nextInt(20);
        if(money == 5 && player.numb_Coins < 100)
        {
          player.numb_Coins+= 5;
         System.out.println("You find 5 derp dollars on the floor crumpled up in a ball. It is as if someone wanted you to find this money....");
        break;
        }
         if(money == 10 && player.numb_Coins < 100)
        {
          player.numb_Coins+= 10;
         System.out.println("You find 10 derp dollars on the floor crumpled up in a ball. You feel as if someone is setting you up for something.....");
        }
        if(money != 5 && money != 10)
          System.out.println("There does not appear to be anything special about this hallway.");
         break;
     }  
      case 'k':
      {
        break;
      }
       case 'e':
      {
       if(player.items[2].isOwned)
       {
        System.out.println("You use the key and push your way through the door, expecting relief, but instead you are greeted with 100 armed soldiers with their guns pointed right at you. A single person is clapping in the room.\n\"Good, good. You will do just fine. \" He says in a mocking tone.\nYou realize only now what the message meant. You were never supposed to win. Losing was your only options. The men take you away screaming as the man who clapped now laughs meniacally.\nTo be continued....\n\n http://dl.dropbox.com/u/60900894/YOU%20WILL%20LOSE%20DIS%20GAME%21%20internetz1.html"); 
       exit = true;
         player.getScore();
         
       break;
       }
       else
        System.out.println("You bang on the door and furiously try to open it with no success. Perhaps you are missing something...");
       break;
       }
       case 'w':
      {
       break;
       }
        case 'c':
      {
        if(player.items[0].isOwned)
        {
          System.out.println("Guards are rushing around everywhere as you go near the closet. One of them stops you and asks for your ID. You instead cut his breathing tube and he goes limp. You stealthly hide the body in the closet.");
        }
        break;
      }
      //resolves the battle. if you have a knife, you get an additional option.
     case 'a':
      {
       System.out.print("He is comming towards you, his gun is raised. Uh-oh. Your options are (Use numbers): \n1) Sneak past. \n");
       if(player.items[0].isOwned)
       {
       System.out.println("2) Fight.");
       }
       boolean r = false;
       while(r != true)
       {int action = sc.nextInt();
                          
                           if(action == 1)
                            {
                              System.out.println("He comes over to you and asks for your ID. You tell him that you lost it during the chaos. Suprisingly, he believes you. He tells you to get moving.");
                              r = true;
                              break;
                            }
                            if(action == 2 && player.items[0].isOwned){
                              System.out.println("He approaches you. You feint to the left and cut a breathing tube that is hooked up to his backpack. Foul smelling gas billows out of it as the soldier struggles for breath. He struggles for a second and goes limp.\n The gun of his is unfortunately damaged from the tumult, however the ammo is interesting to you, so you decide to pick some up. \n NYAN Ammo added to inventory to be studied later perhaps.");  
                              player.items[1].isOwned = true;
                              r = true;
                              break;
                              }
                             if(action == 2 && !player.items[0].isOwned){
                              {
                              System.out.println("Uhhhh, you don't have that option. Better find a better one because he is coming closer.");
                             break;
                              }
                             }
                            else
                            {
                            System.out.println("Uhhhh, you don't have that option. Better find a better one because he is coming closer.");
                            break;
                            }
                          }
       break;
     }
      //resolves the battle. if you have a knife, you get an additional option
      case 'b':
      {
       System.out.print("He doesn't appear to notice you. It would probably benifit you to take this guy out. Your options are (Use numbers): \n1) Sneak past. \n");
       if(player.items[0].isOwned)
       {
       System.out.println("2) Fight.");
       }
       boolean r = false;
       while(r != true)
       {int action = sc.nextInt();
                          
                           if(action == 1)
                            {
                              System.out.println("You walk past him as he still bangs at the machine. You muffle a laugh as you walk past");
                              r = true;
                              break;
                            }
                            if(action == 2 && player.items[0].isOwned){
                              System.out.println("You walk up to him and cut his breathing tube. Gas rushes out as he struggles for air. He goes limp within seconds. You loot his body and figure out he has 10 Derp Dollars on him. Sweet!");  
                              player.numb_Coins += 10;
                              r = true;
                              break;
                              }
                             if(action == 2 && !player.items[0].isOwned){
                              {
                              System.out.println("You do not have that option.");
                             break;
                              }
                             }
                            else
                            {
                            System.out.println("You dont have that option.");
                            break;
                            }
                          }
     }
    
      default:
        System.out.println("There does not appear to be anything special with this room.");
        break;
    
  }
  }
  /**
   * Method to check if the player has reached the end.
   */
  public boolean checkEnd()
  {
    return exit;
  }
}